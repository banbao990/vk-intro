find_package(Vulkan REQUIRED)

add_library(vkbootstrap STATIC)
add_library(glm INTERFACE)
add_library(vma INTERFACE)

add_library(stb_image INTERFACE)

add_library(tinyobjloader STATIC)

target_sources(vkbootstrap PRIVATE 
    vkbootstrap/VkBootstrap.h
    vkbootstrap/VkBootstrap.cpp
)

target_include_directories(vkbootstrap PUBLIC vkbootstrap)
target_link_libraries(vkbootstrap PUBLIC Vulkan::Vulkan $<$<BOOL:UNIX>:${CMAKE_DL_LIBS}>)

#both vma and glm and header only libs so we only need the include path
target_include_directories(vma INTERFACE vma)
target_include_directories(glm INTERFACE glm)

target_sources(tinyobjloader PRIVATE 
    tinyobjloader/tiny_obj_loader.h
    tinyobjloader/tiny_obj_loader.cc
)

target_include_directories(tinyobjloader PUBLIC tinyobjloader)

if(${USE_THIRD_PARTY_SDL})
    # (1) add SDL from the directory "third-party"
    add_subdirectory(SDL)
    add_library(sdl2 INTERFACE)
    target_include_directories(sdl2 INTERFACE "SDL/include")
    target_link_libraries(sdl2 INTERFACE SDL2::SDL2main SDL2::SDL2-static)
else()
    # (2) if install in windows
    add_library(sdl2 INTERFACE)
    target_include_directories(sdl2 INTERFACE "$ENV{VULKAN_SDK}/include/SDL2")
    target_link_directories(sdl2 INTERFACE "$ENV{VULKAN_SDK}/Lib")
    target_link_libraries(sdl2 INTERFACE SDL2 SDL2main)
endif()

add_library(imgui STATIC)

target_include_directories(imgui PUBLIC imgui)

target_sources(imgui PRIVATE 
    imgui/imgui.h
    imgui/imgui.cpp

    imgui/imgui_demo.cpp
    imgui/imgui_draw.cpp
    imgui/imgui_widgets.cpp

    imgui/imgui_impl_vulkan.cpp
    imgui/imgui_impl_sdl2.cpp

    imgui/imgui_tables.cpp
)

target_link_libraries(imgui PUBLIC Vulkan::Vulkan sdl2)

target_include_directories(stb_image INTERFACE stb_image)
